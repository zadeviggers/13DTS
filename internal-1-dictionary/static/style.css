* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	border: 0;
	font-family: sans-serif;
}

:root {
	/* Variables for easy tweaking */

	/* Main layout */
	--navbar-height: 40px;
	--footer-height: 40px;

	/* Only used in desktop layout */
	--categories-width: 200px;
	--auth-width: 300px;

	/* Footer */
	--footer-x-padding: 10px;
	--header-x-padding: 10px;

	/* Categories list */
	--categories-padding: 10px;

	/* Main content */
	--main-content-left-padding: 50px;

	/* Auth panel */
	--auth-padding: 10px;

	/* Disable dark mode */
	color-scheme: light;

	/* Magic accent colour */
	--accent: red;
	--accent-contrast: black;
}

/* Only do cool dynamic accent colour if it would work */
@supports (background-color: AccentColor) and (color: AccentColorText) {
	:root {
		--accent: AccentColor;
		--accent-contrast: AccentColorText;
	}
}

html,
body {
	background-color: white;
	color: black;
}

/* Page layout on mobile screens */
body {
	display: grid;
	min-height: 100vh;

	/* Page layout */
	grid-template-columns: auto;
	grid-template-rows: var(--navbar-height) 1fr auto auto var(--footer-height);
	grid-template-areas:
		"header"
		"main"
		"categories"
		"auth"
		"footer";
}

#categories-container {
	/* Page layout */
	grid-area: categories;

	/* Element style */
	border-right: 1px solid black;
	border-top: 1px solid black;
	border-bottom: 1px solid black;
}
#categories {
	padding: var(--categories-padding);
}
#categories ul {
	list-style-type: none;
}

#auth-container {
	/* Page layout */
	grid-area: auth;
}

#auth {
	/* Element layout */
	padding: var(--auth-padding);
	display: flex;
	flex-direction: column;
	gap: var(--auth-padding);
}

/* Page layout on desktop screens*/
@media screen and (min-width: 800px) {
	body {
		/* Page layout */
		grid-template-columns: var(--categories-width) auto var(--auth-width);
		grid-template-rows: var(--navbar-height) auto var(--footer-height);
		grid-template-areas:
			"header header header"
			"categories main auth"
			"footer footer footer";
	}
	#categories {
		position: sticky;
		top: 0;
	}
	#auth {
		position: sticky;
		top: 0;
	}
}

header {
	/* Page layout */
	grid-area: header;
	/* Make it span all the columns */
	grid-column: 1/-1;

	/* Element layout */
	display: flex;
	align-items: center;
	padding-left: var(--header-x-padding);
	padding-right: var(--header-x-padding);
}

main {
	/* Page layout */
	grid-area: main;

	/* Element layout */
	padding-left: var(--main-content-left-padding);
}

footer {
	/* Page layout */
	grid-area: footer;
	/* Make it span all the columns */
	grid-column: 1/-1;

	/* Element layout */
	display: flex;
	align-items: center;
	padding-left: var(--footer-x-padding);
	padding-right: var(--footer-x-padding);
}

/* Admin edit sections at the top of pages */
.admin-edit-section {
	width: fit-content;
}

/* Images */
img {
	/* Stop images stretching & squishing when the width and height of the element don't match the actual image */
	object-fit: cover;
}

/* Form styles */
fieldset {
	border: 1px solid black;
}

form,
fieldset {
	display: flex;
	flex-direction: column;
	padding: 10px;
	gap: 10px;
}

label {
	display: flex;
	flex-direction: column;
}

form textarea {
	resize: vertical;
}

form :is(button, input, select, textarea) {
	padding: 10px;
	padding-left: 15px;
	padding-right: 15px;
	display: block;
	border-radius: 5px;
	width: 100%;
	background-color: white;
}

form .input-wrapper:has(.input-prefix) input {
	padding-left: 5px;
}

form :is(button, .input-wrapper, select, textarea) {
	border: 2px solid black;
	border-radius: 5px;
	width: 100%;
	color: black;
}
label {
	color: black;
}

form button:hover {
	border-color: darkgrey;
}

form :is(button, select, textarea):focus,
form .input-wrapper:focus-within {
	border-color: var(--accent);
	outline: none;
}

label:has(button, select, textarea):focus-within {
	color: var(--accent);
}

form .input-wrapper {
	padding: 0px;
	display: flex;
	align-items: center;
}

form .input-wrapper .input-prefix {
	padding-left: 10px;
}

form input {
	/* flex-basis: 100; */
	padding: 10px;
}

form button[type="submit"] {
	padding: 10px;
	padding-left: 15px;
	padding-right: 15px;
	border-radius: 10px;
}

form label:has(input[type="checkbox"]) {
	color: black;
}
form label:has(input[type="checkbox"]:checked) {
	color: var(--accent);
}
